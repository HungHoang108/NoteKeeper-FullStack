{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Note.jsx","components/CreateArea.jsx","components/App.jsx","index.js"],"names":["Header","props","className","onChange","event","searchQuery","target","value","toLowerCase","query","placeholder","Footer","Date","getFullYear","Note","title","content","onClick","onEditing","mongoID","id","onDelete","CreateArea","useState","note","setNote","handleChange","name","prevNote","StrictMode","rows","axios","post","then","response","console","log","data","App","notes","setNotes","edit","setEdit","noteID","setnoteId","editedNote","setEditedNote","noteFilteredArray","setNoteFilteredArray","searchStatus","setSearchStatus","deleteNote","delete","map","oneNote","_id","window","location","reload","editNote","mongoid","handleEdit","prevNoted","useEffect","a","get","heading1","fetchData","filteredArray","filter","noteFilter","includes","patch","noteItem","index","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bac29c66.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nfunction Header(props) {\n\n  function searchForNotes(event){\n    const searchQuery = event.target.value.toLowerCase();\n    props.query(searchQuery);\n  }\n  return (\n    <header>\n        <h1>Keeper</h1>\n        <button className=\"signin\">Login</button>\n        <input \n        onChange={searchForNotes}\n        className=\"noteSearch\" placeholder=\"search\"></input>\n\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer() {\n  const year = new Date().getFullYear();\n  return (\n    <footer>\n      \n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\n// import axios from \"axios\";\n\nfunction Note(props) {\n  function handleClick() {\n    props.onDelete(props.mongoID);\n    // axios.delete(`http://localhost:4000/${props.mongoID}`)\n  }\n\n  function handleEditing() {\n    props.onEditing(props.mongoID, props.id);\n  }\n\n  return (\n    <div className=\"note\">\n      <h1>{props.title}</h1>\n      <p>{props.content}</p>\n      <button onClick={handleEditing}>Update</button>\n      <button onClick={handleClick}>Delete</button>\n    </div>\n  );\n}\n\nexport default Note;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction CreateArea(props) {\n  const [note, setNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n\n  function handleChange(event) {\n    const { name, value } = event.target;\n\n    setNote(prevNote => {\n      return {\n        ...prevNote,\n        [name]: value\n      };\n    });\n  }\n\n\n  function submitNote() {\n   \n    setNote({\n      title: \"\",\n      content: \"\"\n    });\n\n    axios.post(\"http://localhost:9000/\", note)\n    .then(response => console.log(response.data))\n    \n  }\n\n  return (\n    <div>\n      <React.StrictMode>\n      <form>\n        <input\n          name=\"title\"\n          onChange={handleChange}\n          value={note.title}\n          placeholder=\"Title\"\n        />\n        <textarea\n          name=\"content\"\n          onChange={handleChange}\n          value={note.content}\n          placeholder=\"Take a note...\"\n          rows=\"3\"\n        />\n        <button onClick={submitNote}>Add</button>\n      </form>\n      </React.StrictMode>\n    </div>\n  );\n}\n\nexport default CreateArea;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport axios from \"axios\";\nimport {Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  const [edit, setEdit] = useState(false)\n  const [noteID, setnoteId] = useState(\"\")\n  const [editedNote, setEditedNote] = useState({\n\n    title: \"\" ,\n    content: \"\"\n  });\n  const [noteFilteredArray, setNoteFilteredArray] = useState([]);\n  const [searchStatus, setSearchStatus] = useState(true);\n\n\n\n  useEffect(()=> {\n    async function fetchData(){\n      const heading1 = await axios.get(\"http://localhost:9000/\")\n      setNotes(heading1.data);\n    }\n    fetchData();\n}, [])\n\n\n  function deleteNote(mongoID) {\n    axios.delete(`http://localhost:9000/${mongoID}`)\n    .then(()=> {\n\n    setNotes(notes.map((oneNote) => {\n      return oneNote._id !== mongoID ? oneNote : null\n    }))\n  });\n    window.location.reload();\n  }\n\n\n  function editNote(mongoid, id) {\n    setEdit(true);\n    setnoteId(mongoid)\n\n    setEditedNote({\n      title: notes[id].title,\n      content: notes[id].content\n    });\n  }\n\n  function handleEdit(event){\n    const {name, value} = event.target; \n    setEditedNote(prevNoted => {\n      return {\n        ...prevNoted,\n        [name]: value\n      };\n    });  \n  }\n\n  function submitNote(){\n    axios.patch(`http://localhost:9000/update/${noteID}`, { \n      title: editedNote.title,\n      content: editedNote.content\n    })\n    // event.preventDefault();\n    setEdit(false);\n    window.location.reload();\n  }\n\n  function searchQueryReceived(searchQuery){\n    \n    const filteredArray= notes.filter((noteFilter)=>{\n      return noteFilter.content.toLowerCase().includes(searchQuery)\n      \n    })\n    console.log(filteredArray)\n    setNoteFilteredArray(filteredArray)\n    setSearchStatus(false)\n  }\n\n\n  return (\n\n      <div>\n      <Header\n        query={searchQueryReceived}\n      />\n      <CreateArea />\n\n{edit? \n(\n  <div>\n    <React.StrictMode>\n    <form>\n      <input\n        name=\"title\"\n        onChange={handleEdit}\n        value={editedNote.title}\n        placeholder=\"Edit title\"\n      />\n      <textarea\n        name=\"content\"\n        onChange={handleEdit}\n        value={editedNote.content}\n        placeholder=\"Edit your note...\"\n        rows=\"3\"\n      />\n      <button onClick={submitNote}>Done</button>\n    </form>\n    </React.StrictMode>\n    \n  </div>\n) : \"\"}\n\n{searchStatus? \n\n  notes.map((noteItem, index) => {\n    return (\n      <Note\n        key={index}\n        id={index}\n        title={noteItem.title}\n        content={noteItem.content}\n        mongoID = {noteItem._id}\n        onDelete={deleteNote}\n        onEditing={editNote}\n      />\n    );\n  })\n\n  : noteFilteredArray.map((noteFilter, index) => {\n    return (\n      <Note\n        key={index}\n        id={index}\n        title={noteFilter.title}\n        content={noteFilter.content}\n        mongoID = {noteFilter._id}\n        onDelete={deleteNote}\n        onEditing={editNote}\n      />\n    );\n  })\n}\n\n      {/* {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            mongoID = {noteItem._id}\n            onDelete={deleteNote}\n            onEditing={editNote}\n          />\n        );\n      })} */}\n\n      {/* {noteFilteredArray.map((noteFilter, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteFilter.title}\n            content={noteFilter.content}\n            mongoID = {noteFilter._id}\n            onDelete={deleteNote}\n            onEditing={editNote}\n          />\n        );\n      })} */}\n\n      <Footer />\n      </div>\n\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    </React.StrictMode>\n, document.getElementById(\"root\"));\n\n//CHALLENGE:\n//1. Implement the add note functionality.\n//- Create a constant that keeps track of the title and content.\n//- Pass the new note back to the App.\n//- Add new note to an array.\n//- Take array and render seperate Note components for each item.\n\n//2. Implement the delete note functionality.\n//- Callback from the Note component to trigger a delete function.\n//- Use the filter function to filter out the item that needs deletion.\n//- Pass a id over to the Note component, pass it back to the App when deleting.\n"],"sourceRoot":""}